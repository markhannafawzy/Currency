
import Foundation

struct Logger {
    
    static func debugingLog(fileName: String? = nil,
                            functionName: String? = nil,
                            LineNumber: String? = nil,
                            data: [String: Any]? = nil) {
//         #if targetEnvironment(simulator)
        
        print("""
                  
                  ==========================================================================================
                  
                  fileName: \(fileName ?? "")
                  functionName : \(functionName ?? "")
                  LineNumber : \(LineNumber ?? "")
                  Data:
                  
                  """)
        data?.forEach({ parameter in
            if parameter.value is Data {
                if let string = String(data: parameter.value as! Data, encoding: .utf8) {
                    print("\(parameter.key) : \(string) \n\n")
                } else {
                    print("\(parameter.key) : Value is Too Large to print \n\n")
                }
                
            } else {
                print("\(parameter.key) : \(parameter.value) \n\n")
            }
            //            ($0.value as? String)?.count ?? 2000 < 1000 ?
            //            print("\($0.key) : \($0.value) \n\n") :
        })
        print("\n\n==========================================================================================")
//         #endif
    }
    
    static func log(fileName: String? = nil,
                    functionName: String? = nil,
                    LineNumber: String? = nil,
                    data: [Any]? = nil) {
        print("""
                  
                  ==========================================================================================
                  
                  fileName: \(fileName ?? "")
                  functionName : \(functionName ?? "")
                  LineNumber : \(LineNumber ?? "")
                  Data:
                  
                  """)
        data?.forEach({ print("\($0)\n\n")})
        print("\n\n==========================================================================================")
    }
    
    static func log(message: String) {
        print("""
                  
                  
                  
                  
                  
                  
                  ==========================================================================================
                  ==========================================================================================
                  ==========================================================================================
                  ==========================================================================================
                  ==========================================================================================
                  ==========================================================================================
                  ==========================================================================================
                  ==========================================================================================
                  ==========================================================================================
                  
                  Data:
                  \(message)
                  \(message)
                  \(message)
                  \(message)
                  \(message)
                  \(message)
                  \(message)
                  \(message)
                  \(message)
                  \(message)
                  \(message)
                  \(message)
                  \(message)
                  \(message)
                  \(message)
                  \(message)
                  \(message)
                  \(message)

                  ==========================================================================================
                  ==========================================================================================
                  ==========================================================================================
                  ==========================================================================================
                  ==========================================================================================
                  ==========================================================================================
                  ==========================================================================================
                  ==========================================================================================
                  ==========================================================================================
                                    
                                    
                                    
                                    
                                    
                                    
                  """)
    }
}
